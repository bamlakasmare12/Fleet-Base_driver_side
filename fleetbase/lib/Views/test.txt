child: Column(
                children: <Widget>[
                  Align(
                    alignment: Alignment.centerLeft,
                    child: Padding(
                      padding: EdgeInsets.symmetric(
                          horizontal: screenwidth * 0.35, vertical: 5),
                      child: const Text(
                        "Incoming Tasks",
                        style: TextStyle(
                            fontSize: 15, fontWeight: FontWeight.bold),
                        textHeightBehavior: TextHeightBehavior(
                            leadingDistribution: TextLeadingDistribution.even),
                      ),
                    ),
                  ),
                  // Task list
                  SizedBox(
                    height: screenheight * 0.2, // Adjusted height for tasks
                    child: ListView.builder(
                      itemCount: 4, // Number of tasks
                      itemBuilder: (context, index) {
                        return Card(
                          margin: const EdgeInsets.symmetric(vertical: 5),
                          elevation: 5,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10),
                          ),
                          child: ListTile(
                            title: Text("Task ${index + 1}"),
                            subtitle: Text("Description of task ${index + 1}"),
                            onTap: () {
                              print('Pressed task ${index + 1}');
                            },
                          ),
                        );
                      },
                    ),
                  ),
                ],
              ),






              
/*

class CustomBottomSheet extends StatefulWidget {
  const CustomBottomSheet({super.key, required this.child});
  final Widget child;

  @override
  State<CustomBottomSheet> createState() => _CustomBottomSheetState();
}

class _CustomBottomSheetState extends State<CustomBottomSheet> {
  final _scrollController = DraggableScrollableController();
final sheet = GlobalKey();
  @override
  Widget build(BuildContext context) {
    return LayoutBuilder(
      builder: (context, constraints) {
        return DraggableScrollableSheet(
          key: sheet,
          controller: _scrollController,
          initialChildSize: 0.5,
          minChildSize: 0,
          maxChildSize: 0.95,
          
         // expand: true,
          snap: true,
          snapSizes: [40/constraints.maxHeight, 0.5],
          builder: (BuildContext context, ScrollController scrollController) {
            return DecoratedBox(
              decoration: const BoxDecoration(
                color: Colors.white,
                boxShadow: [
                  BoxShadow(
                    color: Colors.grey,
                    spreadRadius: 1,
                    blurRadius: 10,
                    offset: Offset(0, 1),
                  ),
                ],
                borderRadius: BorderRadius.only(
                  topLeft: Radius.circular(22),
                  topRight: Radius.circular(22),
                ),
              ),
              child: CustomScrollView(
                controller: scrollController,
                slivers: [
                  
                  SliverToBoxAdapter(
                    child: widget.child,
                  ),
                ],
              ),
            );
          },
        );
      },
    );
  }
}
*/